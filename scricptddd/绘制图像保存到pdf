import matplotlib.pyplot as plt
plt.rcParams['font.sans-serif'] = ['SimHei']  # 用来正常显示中文标签
plt.rcParams['axes.unicode_minus'] = False  # 用来正常显示负号
from matplotlib.backends.backend_pdf import PdfPages

def draw_phase(array,pic_to_save_pdf,title='Phase of the mode'+'_'+'phase_number',cmap='jet'):
    # 采用七色图绘制，jet绘图风格 。
    import numpy as np
    array_phase = np.angle(deg=False, z=array) # 弧度制计数,3.1415926

    plt.ion()
    plt.imshow(array_phase, cmap=cmap)
    # plt.title('ex的第' + '个解，所采用的系数对所有模式叠加得到的强度结果图')
    plt.title(title)

    cbar = plt.colorbar()
    # cbar.set_label('Intensity transverse profile', rotation=-90, va='bottom')

    max_index = np.max(array_phase)
    min_index = np.min(array_phase)
    interval_temp = (max_index - min_index) / 5
    cbar.set_ticks([min_index, min_index + 1 * interval_temp,
                    min_index + 2 * interval_temp, min_index + 3 * interval_temp,
                    min_index + 4 * interval_temp, min_index + 5 * interval_temp])
    # set the font size of colorbar
    cbar.ax.tick_params(labelsize=8)
    # plt.savefig(save_place)
    pic_to_save_pdf.savefig()
    plt.pause(0.005)

    plt.close('all')
    return 0

def draw_intensity(array,pic_to_save_pdf,title='intensity of the mode'+'_'+'phase_number',cmap='jet'):
    # 采用七色图绘制，jet绘图风格 。
    import numpy as np
    # array_phase = np.angle(deg=False, z=array) # 弧度制计数,3.1415926
    array_phase = np.abs(array)
    plt.ion()
    plt.imshow(array_phase, cmap=cmap)
    # plt.title('ex的第' + '个解，所采用的系数对所有模式叠加得到的强度结果图')
    plt.title(title)

    cbar = plt.colorbar()
    # cbar.set_label('Intensity transverse profile', rotation=-90, va='bottom')

    max_index = np.max(array_phase)
    min_index = np.min(array_phase)
    interval_temp = (max_index - min_index) / 5
    cbar.set_ticks([min_index, min_index + 1 * interval_temp,
                    min_index + 2 * interval_temp, min_index + 3 * interval_temp,
                    min_index + 4 * interval_temp, min_index + 5 * interval_temp])
    # set the font size of colorbar
    cbar.ax.tick_params(labelsize=8)
    # plt.savefig(save_place)
    pic_to_save_pdf.savefig()
    plt.pause(0.005)

    plt.close('all')
    return 0

def makedir(dir):
    # 创建目录
    import os
    dir = dir.strip()
    isExist = os.path.exists(dir)
    if not isExist:
        os.makedirs(dir)
        return True
    else:
        return False

def subPicPlot(data):
    # x_y type picture
    # data is a list ,each one is a pair of x_label and y_label
    import math
    import numpy as np
    # 去除坐标轴
    import matplotlib.pyplot as plt
    length  = len(data)
    sqrt_length = math.ceil(np.sqrt(length))


    count = 0

    for i in range(length):
        x_label,y_label = data[i]
        # add title ,sum title
        # plt.suptitle('no '+str(i))
        plt.subplot(sqrt_length,sqrt_length,int(i)+1)
        plt.plot(x_label, y_label )
        # add sub title
        plt.title('No'+str(i+1)+' eigenmode' ,fontdict={'weight':'normal','size':8})

        # delete axis
        plt.axis('off')
    plt.show()
def subPicPlotIntensity(data,saveplace):
    # x_y type picture
    # data is a list ,each one is a pair of x_label and y_label
    import math
    import numpy as np
    # 去除坐标轴
    import matplotlib.pyplot as plt
    length  = len(data)
    sqrt_length = math.ceil(np.sqrt(length))


    count = 0

    for i in range(length):
        intensity = data[i]
        # add title ,sum title
        # plt.suptitle('no '+str(i))

        plt.subplot(sqrt_length,sqrt_length,int(i)+1)
        plt.imshow(intensity,cmap='plasma' )
        # add sub title
        plt.title('No'+str(i+1)+' eigenmode' ,fontdict={'weight':'normal','size':8})

        # delete axis
        plt.axis('off')
        # plt.pause(3)
        # plt.close('all')
    plt.show()
    plt.savefig(fname =saveplace,format ='eps' ,dpi = 600)

if __name__ == '__main__':

    # 配图地址
    # https: // blog.csdn.net / weixin_43868754 / article / details / 106765038?utm_medium = distribute.pc_relevant.none - task - blog - searchFromBaidu - 3.
    # control & depth_1 - utm_source = distribute.pc_relevant.none - task - blog - searchFromBaidu - 3.
    # control
    # 要保存的pdf地址
    pic_to_save_pdf_intensity_ex = PdfPages('paper_intensity_ex.pdf')
    pic_to_save_pdf_intensity_ey = PdfPages('paper_intensity_ey.pdf')
    pic_to_save_pdf_intensity_ez = PdfPages('paper_intensity_ez.pdf')
    pic_to_save_pdf_phase_ex = PdfPages('paper_phase_ex.pdf')
    pic_to_save_pdf_phase_ey = PdfPages('paper_phase_ey.pdf')
    pic_to_save_pdf_phase_ez = PdfPages('paper_phase_ez.pdf')
    pic_to_save_pdf_intensity_esum = PdfPages('paper_intensity_esum.pdf')
    pic_to_save_pdf_phase_esum = PdfPages('paper_phase_esum.pdf')

    import  numpy as np
    import matplotlib.pyplot as plt
    # data is 40,3,1002001
    saveplave_dir =  'origin//'
    origin_data = np.load(r'../../../画图问题//data_npy//40mode_fushu.npy')
    mode_number , mode_fenliang ,mode_jingdu2 = origin_data.shape
    # 40,3,1001

    mode_jingdu = int(np.sqrt(mode_jingdu2))
    print(mode_jingdu)
    # exit()
    jingdu = mode_jingdu
    data = []
    new_pic_shape = (((jingdu//2+((jingdu//4)+50)))-(jingdu//2-((jingdu//4)+50))) #extend 50 more
    for i in range(mode_number):
        temp = np.zeros(shape=(new_pic_shape,new_pic_shape),dtype=float)
        for j in range(mode_fenliang):

            ex  = np.reshape( origin_data[i,j,:],(jingdu,jingdu))
            ex = ex[jingdu//2-((jingdu//4)+50):jingdu//2+((jingdu//4)+50),jingdu//2-((jingdu//4)+50):jingdu//2+((jingdu//4)+50)]
            if j==0:
                draw_intensity(array=ex,pic_to_save_pdf=pic_to_save_pdf_intensity_ez,title='Intensity of the mode'+'_'+str(i+1),cmap='jet')
                draw_phase(array=ex,pic_to_save_pdf=pic_to_save_pdf_phase_ez,title='Phase of the mode'+'_'+str(i+1),cmap='jet')
            if j==1:
                draw_intensity(array=ex,pic_to_save_pdf=pic_to_save_pdf_intensity_ex,title='Intensity of the mode'+'_'+str(i+1),cmap='jet')
                draw_phase(array=ex,pic_to_save_pdf=pic_to_save_pdf_phase_ex,title='Phase of the mode'+'_'+str(i+1),cmap='jet')
            if j==2:
                draw_intensity(array=ex,pic_to_save_pdf=pic_to_save_pdf_intensity_ey,title='Intensity of the mode'+'_'+str(i+1),cmap='jet')
                draw_phase(array=ex,pic_to_save_pdf=pic_to_save_pdf_phase_ey,title='Phase of the mode'+'_'+str(i+1),cmap='jet')

            # exit()
            temp =temp+((np.abs(ex))**2)

        # draw pic
        draw_phase(array=temp,pic_to_save_pdf=pic_to_save_pdf_phase_esum,title='Phase of the mode'+'_'+str(i+1)+' esum',cmap='jet')
        draw_intensity(array=temp,pic_to_save_pdf=pic_to_save_pdf_intensity_esum,title='Intensity of the mode'+'_'+str(i+1)+' esum',cmap='jet')

    pic_to_save_pdf_intensity_ex.close()
    pic_to_save_pdf_intensity_ey.close()
    pic_to_save_pdf_intensity_ez.close()
    pic_to_save_pdf_phase_ex.close()
    pic_to_save_pdf_phase_ey.close()
    pic_to_save_pdf_phase_ez.close()
    pic_to_save_pdf_intensity_esum.close()
    pic_to_save_pdf_phase_esum.close()
            # ey = np.reshape(origin_data[i, j, :], (jingdu, jingdu))
            # ey = ex[jingdu // 2 - ((jingdu // 4) + 50):jingdu // 2 + ((jingdu // 4) + 50),
            #      jingdu // 2 - ((jingdu // 4) + 50):jingdu // 2 + ((jingdu // 4) + 50)]
            # ez = np.reshape(origin_data[i, j, :], (jingdu, jingdu))
            # ez = ex[jingdu // 2 - ((jingdu // 4) + 50):jingdu // 2 + ((jingdu // 4) + 50),
            #      jingdu // 2 - ((jingdu // 4) + 50):jingdu // 2 + ((jingdu // 4) + 50)]

    # subPicPlotIntensity(data =data ,saveplace= saveplave_dir+'all_eigenMode.eps')


